service: serverless-di-example
frameworkVersion: "3"
package:
  individually: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, ''}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            - !GetAtt MessageQueue.Arn
  environment:
    NODE_OPTIONS: --enable-source-maps
    MESSAGE_QUEUE_URL: !GetAtt MessageQueue.QueueUrl

functions:
  createTodo:
    handler: src/handlers/createTodo.handler
    events:
      - httpApi:
          path: /api/todos
          method: POST

  processMessage:
    handler: src/handlers/processMessage.handler
    timeout: 60 # 1 minute
    events:
      - sqs:
          arn: !GetAtt MessageQueue.Arn
          batchSize: 1


resources:
  Resources:
    MessageQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${sls:stage}-message-queue
        VisibilityTimeout: 61 # 1 minute + 1 second

plugins:
  - serverless-esbuild
  - serverless-offline-sqs
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: "2012-11-05"
    endpoint: http://0.0.0.0:9324
    region: ap-southeast-2
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false
